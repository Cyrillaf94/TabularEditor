<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>15, 14</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACs
        DAAAAk1TRnQBSQFMAgEBAwEAAUABAAFAAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABED4AAzgBXANWAbgDMwFTAwYBCAgAAVsBvQHRAd8BVwHWAfQB/gFUAdgB9gH/
        AVIB1wH2Af8BUQHXAfYB/wFQAdcB9gH/ARgBsAHmAf4BFQGxAecB/wETAbAB5wH/AREBrwHnAf8BDAF4
        Ab0B/wEOAX8BxwH+AQ0BfgHJAf8BIAF3AbAB3qwAAzcBWgMAAf8DAAH/AwAB/wNMAeQDQwF4BAABXwHa
        AfcB/wFdAdoB9wH/AVsB2gH3Af8BVwHYAfYB/wFVAdgB9gH/AVMB2AH2Af8BHAG1AegB/wEaAbQB6QH/
        ARgBswHoAf8BFgGyAegB/wEMAXoBvwH/AQ0BgwHLAf8BDQGBAcoB/wENAYEByQH/BAADDAEQAzoBVgM/
        AWADPgFfAz4BXgM+AV8DQAFhAy4BQQMAAQGAAAM3AVoDGAH6AwAB/wMAAf8DAAH/AwAB/wNMAeQEAAFl
        Ad0B9wH/AWMB3AH3Af8BYQHbAfcB/wFfAdsB9wH/AVsB2gH3Af8BWgHZAfcB/wEgAbgB6gH/AR8BtwHq
        Af8BHAG2AekB/wEaAbQB6QH/AQwBfQHAAf8BDQGFAcwB/wENAYQBywH/AQ0BgwHLAf8EAAMhASwDWAGf
        AzgBUQM5AVIDPwFeAzcBUANDAWcDUwGRAwMBBFwAAwwBEANGAYADPQFpFAADNQFXAxgB+gMAAf8DAAH/
        AwAB/wMAAf8DAAH/A0wB5AQAAWsB3gH3Af8BaQHbAfUB/gFnAdoB9QH+AWQB3AH3Af8BYgHbAfcB/wFf
        AdoB9wH/ASUBuwHrAf8BIwG6AesB/wEhAbgB6gH/AR8BtwHpAf8BDQGAAcIB/wENAYgBzgH/AQ0BhwHN
        Af8BDgGCAcsB/gQAAyIBLQNMAX4EAAMsAT0DXgHBAycBNQMSARcDUAGGAwMBBFwAA0YBgAMAAf8DAAH/
        A1ABngMIAQsIAAMzAVMDGAH6AwAB/wMAAf8BHwIgAfgDAAH/AwAB/wMAAf8DTAHkBAABcQHfAfgB/wFv
        Ad8B+AH/AWwB3gH3Af8BawHeAfgB/wFoAd0B9wH/AWYB3AH3Af8BKQG+AewB/wEnAb0B7AH/ASUBvAHr
        Af8BIwG6AesB/wENAYIBwwH/AQ4BiwHQAf8BDQGJAc8B/wENAYgBzgH/BAADIgEtA0wBfgQAAykBOQNe
        Ab8DSQFzAzwBVwNKAXYDAAEBXAADRgGAAwAB/wNMAeQDAAH/A1kBzgMYASEDMwFTARgBGQEYAfoDAAH/
        AwAB/wNQAeIDJAE2AS0BLgEsAfQDAAH/AwAB/wNMAeQEAAF3AeEB+AH/AXUB4AH4Af8BcwHgAfgB/wFw
        Ad8B+AH/AW4B3wH4Af8BbAHeAfcB/wEuAcEB7gH/ASsBvwHsAf8BKQG+AewB/wEnAb0B7AH/AQwBhQHE
        Af8BDQGNAdEB/wENAYsB0AH/AQ4BiwHQAf8EAAMhASwDVwGeAzQBSwM2AU4DRwFvAzkBVANTAYoDUwGJ
        AywBPQMKAQ0DEAQVARsDFQEbAxUBGwMVARsDEwEYQAADRgGAAwAB/wMfAS0DTAHkAwAB/wE4ATkBOAHw
        ARgBGQEYAfoDAAH/AwAB/wNZAcMDEQEXAwEBAgEtAS4BLAH0AwAB/wMAAf8DTAHkBAABfQHgAfYB/gF7
        AeEB+AH/AXkB4QH4Af8BdgHhAfgB/wF0AeAB+AH/AXIB3wH4Af8BMgHDAe4B/wEwAcAB6wH+AS4BwQHu
        Af8BLAHAAe0B/wENAYgBxwH/AQ4BkAHTAf8BDgGPAdMB/wEOAY0B0gH/BAADHAElA2ABzANhAeQDXQGt
        A1sBogNiAeADYQHhA1YBlAM0AUoDTAF2A1YBkQNSAY0DTwGEA1ABhgNRAYkDXgG0QAADRgGAAwAB/wML
        AQ8DGwEmA0gB6QMAAf8DAAH/AwAB/wNNAZYDBgEIBAADAQECAS0BLgEsAfQDAAH/AwAB/wNMAeQEAAF7
        AcMB1AHfAYIB4wH4Af8BfwHgAfYB/gF9AeIB+AH/AXsB4gH5Af8BcAHeAfcB/wE3AccB8AH/ATUBxgHv
        Af8BMwHEAe8B/wEwAcMB7gH/AQ0BigHIAf8BDgGSAdUB/wEOAZIB1AH/AQ4BkAHUAf8EAAMDAQQDGQEh
        AxsBIwM+AVsDLwFBAxsBIwMeAScDFAEaAwQBBQNPAX4DQQFhA0cBbwNPAYMDKgE6AwcBCQNXAZxAAANG
        AYADAAH/AwsBDwMsAUQBHwEhASAB+AMAAf8DAAH/AwAB/wNVAbUDDQERBAADAQECAS0BLgEsAfQDAAH/
        AwAB/wNMAeQUAAE/AcwB8gH/AT0BywHxAf8BPAHKAfEB/wE5AcgB8AH/ATcBxwHwAf8BNQHFAe8B/wEN
        AYwByQH/AQ4BlQHWAf8BDgGRAdMB/gEOAZMB1QH/BAADHgEoAx8BKgMcASUDQgFjAy0BPgMfASkDFAEa
        BAADCQEMA08BfQM5AVMDTwGCA2EB4gNEAWkEAANWAZhAAANGAYADAAH/AzABSwItASwB9AMAAf8DWAHU
        A0gB6wMAAf8DAAH/A1cB2gMfAS0DAQECAS0BLgEsAfQDAAH/AwAB/wNMAeQUAAFDAc8B8gH/AUIBzgHz
        Af8BQAHNAfIB/wE+AcsB8QH/ATsBygHxAf8BOgHJAfAB/wENAY8BywH/AQ8BmAHZAf8BDgGXAdgB/wEO
        AZMB1AH+BAADXgG7A00BgANKAXcDTgF+A0cBcANTAY8DUgGJAzgBUQNDAWUDUQGEAzMBSAMXAR4DHwEq
        AxABFQMIAQsDVwGbQAADRgGAAwAB/wEfASEBIAH4AwAB/wNTAa0DCwEPAyQBNQE4ATkBOAHwAwAB/wMA
        Af8DOAHxAzMBUwEtAS4BLAH0AwAB/wMAAf8DTAHkFAABSAHSAfQB/wFGAdEB8wH/AUQBzwHzAf8BQgHO
        AfIB/wFAAc0B8gH/AT4BywHxAf8BDQGRAc0B/wEOAZkB2QH/AQ4BmQHZAf8BDwGVAdYB/gQAA1YBmQMB
        AQIDMQFGA14BuANBAWIDRQFrA08BfgMkATEDDwEUA1wBqQNeAcYDXQG+A10BvQNdAb8DXQHBA2AB5EAA
        A0UBfQMAAf8DAAH/A0MBeAMBAQIIAAMkATYBOAE5ATgB8AMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wNM
        AeQUAAFQAbgB0QHfAUsB1AH1Af8BSQHSAfQB/wFHAdEB8wH/AUUB0AHzAf8BPAHGAe0B/wEPAZYB0wH+
        AQ8BmgHZAf4BDgGbAdsB/wEPAZgB2AH+BAADVgGYBAADPwReAccDKQE5AxkBIANTAYkDBAEFAwEBAgM9
        AVwDTgGFA04BgwNOAYMDTgGDA04BgwNMAX5AAAMGAQgDOAFeAy4BRxQAAyUBNwM4AfADAAH/AwAB/wMA
        Af8DAAH/AwAB/wNMAeQkAAEPAaAB3QH+AQ4BoQHeAf8BDwGgAd4B/wEPAZ8B3QH/AQ4BngHcAf8BDgGd
        AdwB/wQAA1gBoAMSARcDEwEZAxwBJQMNAREDIQEsA1YBkQMGAQiEAAMoATwBLQEuASwB9AMAAf8DAAH/
        AwAB/wMAAf8DTAHkJAABDwGjAd4B/gEPAaEB3QH+AQ8BoQHdAf4BDwGfAdwB/gEPAaEB3gH/AQ8BnQHb
        Af4EAANgAekDXwHUA14B0gNeAdIDXgHSA18B2wNcAa8DBAEGiAADKAE9Ai0BLAH0AwAB/wMAAf8DWQHO
        AzoBYiQAAQ8BpwHiAf8BDwGmAeEB/wEOAaUB4QH/AQ8BogHeAf4BDgGjAd8B/wEOAaIB3wH/BAADQAFi
        A0IBZgNCAWYDQgFmA0IBZgNCAWcDMgFHAwEBAowAAyoBQQNQAZ4DJQE3LAABIgGZAcQB3wEPAakB4wH/
        AQ8BqAHiAf8BDwGkAd8B/gEPAaYB4QH/ASIBlAHCAd+EAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEB
        AQABAQUAAYAXAAP/AQAB/wHhAYABAQL/AgAB/wHAAYABAQEAAX8CAAH/AoABAQEAAX8CAAEfAQABgAEB
        ASABfwIAAQYBAAGAAQEBIAF/BAABgAEBBgABgAEBBQABIAGAAQEFAAEgAfgCAQECBAAB+AEBBgAB+AEB
        BAABBgEAAfgBAQFAAwABHwEAAf8BgQEAAf8CAAH/AYAB/wGBAQAB/wIAAf8BwAH/AYEBAAH/AgAB/wHj
        Af8BgQL/AgAL
</value>
  </data>
</root>